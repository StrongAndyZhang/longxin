package org.longxin.domains;

// Generated 2015-1-17 19:49:59 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.CascadeType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.mysql.jdbc.StringUtils;

/**
 * Feature generated by hbm2java
 */
@Entity
@Table(name = "feature", catalog = "longxin")
public class Feature implements java.io.Serializable, Cloneable
{
	private static final long serialVersionUID = 4452069230447771945L;
	private Integer id;
	private Product product;
	private String featureName;
	private Integer template;
	private String description;
	private String iconName;
	private Set<Module> modules = new HashSet<Module>(0);

	public Feature()
	{
	}

	public Feature(Product product, String featureName)
	{
		this.product = product;
		this.featureName = featureName;
	}

	public Feature(Product product, String featureName, Integer template,
			Set<Module> modules)
	{
		this.product = product;
		this.featureName = featureName;
		this.template = template;
		this.modules = modules;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId()
	{
		return this.id;
	}

	public void setId(Integer id)
	{
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRODUCT", nullable = false)
	public Product getProduct()
	{
		return this.product;
	}

	public void setProduct(Product product)
	{
		this.product = product;
	}

	@Column(name = "FEATURE_NAME", nullable = false, length = 128)
	public String getFeatureName()
	{
		return this.featureName;
	}

	public void setFeatureName(String featureName)
	{
		this.featureName = featureName;
	}

	@Column(name = "TEMPLATE")
	public Integer getTemplate()
	{
		return this.template;
	}

	public void setTemplate(Integer template)
	{
		this.template = template;
	}

	@Column(name = "DESCRIPTION")
	public String getDescription()
	{
		return description;
	}

	public void setDescription(String description)
	{
		this.description = description;
	}

	@Column(name = "ICON_NAME")
	public String getIconName()
	{
		if(StringUtils.isNullOrEmpty(iconName))
		{
			return "default";
		}
		return iconName;
	}

	public void setIconName(String iconName)
	{
		this.iconName = iconName;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "feature", cascade= CascadeType.ALL)
	public Set<Module> getModules()
	{
		return this.modules;
	}

	public void setModules(Set<Module> modules)
	{
		this.modules = modules;
	}
	
	public Object clone() throws CloneNotSupportedException 
	{
		Feature cloned = (Feature) super.clone();
		cloned.setId(null);
		if (this.modules != null)
		{
			Set<Module> clonedModules = new HashSet<Module>();
			for (Module module : modules)
			{
				Module clonedModule = (Module) module.clone();
				clonedModules.add(clonedModule);
			}

			cloned.setModules(clonedModules);
		}
		
		return cloned;
	}
}
