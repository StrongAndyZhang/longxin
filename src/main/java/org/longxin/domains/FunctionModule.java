package org.longxin.domains;

// Generated 2015-1-5 21:21:32 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OrderBy;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;


/**
 * Department generated by hbm2java
 */
@Entity
@Table(name = "FUNCTION_MODULE", catalog = "longxin")
public class FunctionModule implements java.io.Serializable
{
    /**
     * 
     */
    private static final long serialVersionUID = 821204827014928463L;

    private Integer id;

    private Feature feature;
    
    private String name;
    
    private Boolean template;
    
    private String description;
    
    private Set<L1Component> l1Components = new HashSet<L1Component>(0);
    
    //private Boolean isDraft;

    public FunctionModule()
    {
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public Integer getId()
    {
        return id;
    }

    public void setId(Integer id)
    {
        this.id = id;
    }
    
    @Column(name = "NAME", length = 128)
    public String getName()
    {
        return this.name;
    }

    public void setName(String name)
    {
        this.name = name;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "FEATURE", nullable = false)
    public Feature getFeature()
    {
        return this.feature;
    }

    public void setFeature(Feature feature)
    {
        this.feature = feature;
    }

    
    @Column(name = "TEMPLATE")
    public Boolean getTemplate()
    {
        return this.template;
    }

    public void setTemplate(Boolean template)
    {
        this.template = template;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "functionModule", cascade= CascadeType.ALL)
    @OrderBy("id ASC")
    public Set<L1Component> getL1Components()
    {
        return l1Components;
    }

    public void setL1Components(Set<L1Component> l1Components)
    {
        this.l1Components = l1Components;
    }
    
    @Column(name = "DESCRIPTION")
    public String getDescription()
    {
        return description;
    }

    public void setDescription(String description)
    {
        this.description = description;
    }
    
    @Override
    protected FunctionModule clone() throws CloneNotSupportedException
    {
        FunctionModule cloned = (FunctionModule)super.clone();
        cloned.setId(null);
        cloned.setTemplate(Boolean.FALSE);
        if (this.l1Components != null)
        {
            Set<L1Component> clonedL1Components = new HashSet<L1Component>();
            for (L1Component l1Component : l1Components)
            {
                L1Component clonedL1Component = (L1Component) l1Component.clone();
                clonedL1Component.setFunctionModule(cloned);
                clonedL1Components.add(clonedL1Component);
            }

            cloned.setL1Components(clonedL1Components);
        }
        
        return cloned;
    }

}
